#Action name
name: Build and Release Electron App for Windows and Linux

on:
  #manual dispatch action
  workflow_dispatch:

#Jobs to nessary to complete build and github release
jobs:
  build:
    build:
    name: Build for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm install

      - name: Build the Electron app
        run: npm run make

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: electron-${{ matrix.os }}-build
          path: out/make/**/*

  release:
    name: Create GitHub Release
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js (to read version)
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Get app version from package.json
        id: get_version
        run: |
          echo "VERSION=v$(node -p "require('./package.json').version")" >> $GITHUB_ENV

      - name: Download Windows artifacts
        uses: actions/download-artifact@v4
        with:
          name: electron-windows-latest-build
          path: artifacts/windows

      - name: Download Linux artifacts
        uses: actions/download-artifact@v4
        with:
          name: electron-ubuntu-latest-build
          path: artifacts/linux

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          name: Release ${{ env.VERSION }}
          tag_name: ${{ env.VERSION }}
          files: |
            artifacts/windows/**
            artifacts/linux/**
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
